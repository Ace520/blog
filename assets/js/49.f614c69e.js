(window.webpackJsonp=window.webpackJsonp||[]).push([[49],{456:function(t,s,a){"use strict";a.r(s);var e=a(12),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"gh-pages"}},[t._v("gh-pages")]),t._v(" "),a("p",[t._v("Publish files to a "),a("code",[t._v("gh-pages")]),t._v(" branch on GitHub (or any other branch anywhere else).")]),t._v(" "),a("h2",{attrs:{id:"getting-started"}},[t._v("Getting Started")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" gh-pages --save-dev\n")])])]),a("p",[t._v("This module requires Git "),a("code",[t._v(">=1.9")]),t._v(".")]),t._v(" "),a("h2",{attrs:{id:"basic-usage"}},[t._v("Basic Usage")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" ghpages "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'gh-pages'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nghpages"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("publish")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'dist'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("err")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h2",{attrs:{id:"publish"}},[a("code",[t._v("publish")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("ghpages"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("publish")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dir"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" callback"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// or...")]),t._v("\nghpages"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("publish")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dir"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" options"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" callback"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("Calling this function will create a temporary clone of the current repository, create a "),a("code",[t._v("gh-pages")]),t._v(" branch if one doesn't already exist, copy over all files from the base path, or only those that match patterns from the optional "),a("code",[t._v("src")]),t._v(" configuration, commit all changes, and push to the "),a("code",[t._v("origin")]),t._v(" remote.")]),t._v(" "),a("p",[t._v("If a "),a("code",[t._v("gh-pages")]),t._v(" branch already exists, it will be updated with all commits from the remote before adding any commits from the provided "),a("code",[t._v("src")]),t._v(" files.")]),t._v(" "),a("p",[a("strong",[t._v("Note")]),t._v(" that any files in the "),a("code",[t._v("gh-pages")]),t._v(" branch that are "),a("em",[t._v("not")]),t._v(" in the "),a("code",[t._v("src")]),t._v(" files "),a("strong",[t._v("will be removed")]),t._v(".  See the "),a("a",{attrs:{href:"#optionsadd"}},[a("code",[t._v("add")]),t._v(" option")]),t._v(" if you don't want any of the existing files removed.")]),t._v(" "),a("h3",{attrs:{id:"dir"}},[a("a",{attrs:{id:"dir"}},[a("code",[t._v("dir")])])]),t._v(" "),a("ul",[a("li",[t._v("type: "),a("code",[t._v("string")])])]),t._v(" "),a("p",[t._v("The base directory for all source files (those listed in the "),a("code",[t._v("src")]),t._v(" config property).")]),t._v(" "),a("p",[t._v("Example use:")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n * Given the following directory structure:\n *\n *   dist/\n *     index.html\n *     js/\n *       site.js\n *\n * The usage below will create a `gh-pages` branch that looks like this:\n *\n *   index.html\n *   js/\n *     site.js\n *\n */")]),t._v("\nghpages"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("publish")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'dist'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" callback"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h3",{attrs:{id:"options"}},[t._v("Options")]),t._v(" "),a("p",[t._v("The default options work for simple cases.  The options described below let you push to alternate branches, customize your commit messages, and more.")]),t._v(" "),a("h4",{attrs:{id:"options-src"}},[a("a",{attrs:{id:"optionssrc"}},[t._v("options.src")])]),t._v(" "),a("ul",[a("li",[t._v("type: "),a("code",[t._v("string|Array<string>")])]),t._v(" "),a("li",[t._v("default: "),a("code",[t._v("'**/*'")])])]),t._v(" "),a("p",[t._v("The "),a("a",{attrs:{href:"https://github.com/isaacs/minimatch",target:"_blank",rel:"noopener noreferrer"}},[t._v("minimatch"),a("OutboundLink")],1),t._v(" pattern or array of patterns used to select which files should be published.")]),t._v(" "),a("h4",{attrs:{id:"options-branch"}},[a("a",{attrs:{id:"optionsbranch"}},[t._v("options.branch")])]),t._v(" "),a("ul",[a("li",[t._v("type: "),a("code",[t._v("string")])]),t._v(" "),a("li",[t._v("default: "),a("code",[t._v("'gh-pages'")])]),t._v(" "),a("li",[a("code",[t._v("-b | --branch <branch name>")])])]),t._v(" "),a("p",[t._v("The name of the branch you'll be pushing to.  The default uses GitHub's "),a("code",[t._v("gh-pages")]),t._v(" branch, but this can be configured to push to any branch on any remote.")]),t._v(" "),a("p",[t._v("Example use of the "),a("code",[t._v("branch")]),t._v(" option:")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n * This task pushes to the `master` branch of the configured `repo`.\n */")]),t._v("\nghpages"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("publish")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'dist'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  branch"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'master'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  repo"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'https://example.com/other/repo.git'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" callback"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h4",{attrs:{id:"options-dest"}},[a("a",{attrs:{id:"optionsdest"}},[t._v("options.dest")])]),t._v(" "),a("ul",[a("li",[t._v("type: "),a("code",[t._v("string")])]),t._v(" "),a("li",[t._v("default: "),a("code",[t._v("'.'")])])]),t._v(" "),a("p",[t._v("The destination folder within the destination branch.  By default, all files are published to the root of the repository.")]),t._v(" "),a("p",[t._v("Example use of the "),a("code",[t._v("dest")]),t._v(" option:")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n * Place content in the static/project subdirectory of the target\n * branch.\n */")]),t._v("\nghpages"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("publish")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'dist'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  dest"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'static/project'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" callback"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h4",{attrs:{id:"options-dotfiles"}},[a("a",{attrs:{id:"optionsdotfiles"}},[t._v("options.dotfiles")])]),t._v(" "),a("ul",[a("li",[t._v("type: "),a("code",[t._v("boolean")])]),t._v(" "),a("li",[t._v("default: "),a("code",[t._v("false")])])]),t._v(" "),a("p",[t._v("Include dotfiles.  By default, files starting with "),a("code",[t._v(".")]),t._v(" are ignored unless they are explicitly provided in the "),a("code",[t._v("src")]),t._v(" array.  If you want to also include dotfiles that otherwise match your "),a("code",[t._v("src")]),t._v(" patterns, set "),a("code",[t._v("dotfiles: true")]),t._v(" in your options.")]),t._v(" "),a("p",[t._v("Example use of the "),a("code",[t._v("dotfiles")]),t._v(" option:")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n * The usage below will push dotfiles (directories and files)\n * that otherwise match the `src` pattern.\n */")]),t._v("\nghpages"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("publish")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'dist'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("dotfiles"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" callback"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h4",{attrs:{id:"options-add"}},[a("a",{attrs:{id:"optionsadd"}},[t._v("options.add")])]),t._v(" "),a("ul",[a("li",[t._v("type: "),a("code",[t._v("boolean")])]),t._v(" "),a("li",[t._v("default: "),a("code",[t._v("false")])])]),t._v(" "),a("p",[t._v("Only add, and never remove existing files.  By default, existing files in the target branch are removed before adding the ones from your "),a("code",[t._v("src")]),t._v(" config.  If you want the task to add new "),a("code",[t._v("src")]),t._v(" files but leave existing ones untouched, set "),a("code",[t._v("add: true")]),t._v(" in your options.")]),t._v(" "),a("p",[t._v("Example use of the "),a("code",[t._v("add")]),t._v(" option:")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n * The usage below will only add files to the `gh-pages` branch, never removing\n * any existing files (even if they don't exist in the `src` config).\n */")]),t._v("\nghpages"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("publish")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'dist'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("add"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" callback"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h4",{attrs:{id:"options-repo"}},[a("a",{attrs:{id:"optionsrepo"}},[t._v("options.repo")])]),t._v(" "),a("ul",[a("li",[t._v("type: "),a("code",[t._v("string")])]),t._v(" "),a("li",[t._v("default: url for the origin remote of the current dir (assumes a git repository)")]),t._v(" "),a("li",[a("code",[t._v("-r | --repo <repo url>")])])]),t._v(" "),a("p",[t._v("By default, "),a("code",[t._v("gh-pages")]),t._v(" assumes that the current working directory is a git repository, and that you want to push changes to the "),a("code",[t._v("origin")]),t._v(" remote.")]),t._v(" "),a("p",[t._v("If instead your script is not in a git repository, or if you want to push to another repository, you can provide the repository URL in the "),a("code",[t._v("repo")]),t._v(" option.")]),t._v(" "),a("p",[t._v("Example use of the "),a("code",[t._v("repo")]),t._v(" option:")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n * If the current directory is not a clone of the repository you want to work\n * with, set the URL for the repository in the `repo` option.  This usage will\n * push all files in the `src` config to the `gh-pages` branch of the `repo`.\n */")]),t._v("\nghpages"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("publish")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'dist'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  repo"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'https://example.com/other/repo.git'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" callback"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h4",{attrs:{id:"options-remote"}},[a("a",{attrs:{id:"optionsremote"}},[t._v("options.remote")])]),t._v(" "),a("ul",[a("li",[t._v("type: "),a("code",[t._v("string")])]),t._v(" "),a("li",[t._v("default: "),a("code",[t._v("'origin'")])])]),t._v(" "),a("p",[t._v("The name of the remote you'll be pushing to.  The default is your "),a("code",[t._v("'origin'")]),t._v(" remote, but this can be configured to push to any remote.")]),t._v(" "),a("p",[t._v("Example use of the "),a("code",[t._v("remote")]),t._v(" option:")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n * This task pushes to the `gh-pages` branch of of your `upstream` remote.\n */")]),t._v("\nghpages"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("publish")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'dist'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  remote"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'upstream'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" callback"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h4",{attrs:{id:"options-tag"}},[a("a",{attrs:{id:"optionstag"}},[t._v("options.tag")])]),t._v(" "),a("ul",[a("li",[t._v("type: "),a("code",[t._v("string")])]),t._v(" "),a("li",[t._v("default: "),a("code",[t._v("''")])])]),t._v(" "),a("p",[t._v("Create a tag after committing changes on the target branch.  By default, no tag is created.  To create a tag, provide the tag name as the option value.")]),t._v(" "),a("h4",{attrs:{id:"options-message"}},[a("a",{attrs:{id:"optionsmessage"}},[t._v("options.message")])]),t._v(" "),a("ul",[a("li",[t._v("type: "),a("code",[t._v("string")])]),t._v(" "),a("li",[t._v("default: "),a("code",[t._v("'Updates'")])])]),t._v(" "),a("p",[t._v("The commit message for all commits.")]),t._v(" "),a("p",[t._v("Example use of the "),a("code",[t._v("message")]),t._v(" option:")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n * This adds commits with a custom message.\n */")]),t._v("\nghpages"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("publish")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'dist'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  message"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Auto-generated commit'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" callback"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h4",{attrs:{id:"options-user"}},[a("a",{attrs:{id:"optionsuser"}},[t._v("options.user")])]),t._v(" "),a("ul",[a("li",[t._v("type: "),a("code",[t._v("Object")])]),t._v(" "),a("li",[t._v("default: "),a("code",[t._v("null")])])]),t._v(" "),a("p",[t._v("If you are running the "),a("code",[t._v("gh-pages")]),t._v(" task in a repository without a "),a("code",[t._v("user.name")]),t._v(" or "),a("code",[t._v("user.email")]),t._v(" git config properties (or on a machine without these global config properties), you must provide user info before git allows you to commit.  The "),a("code",[t._v("options.user")]),t._v(" object accepts "),a("code",[t._v("name")]),t._v(" and "),a("code",[t._v("email")]),t._v(" string values to identify the committer.")]),t._v(" "),a("p",[t._v("Example use of the "),a("code",[t._v("user")]),t._v(" option:")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("ghpages"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("publish")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'dist'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  user"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    name"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Joe Code'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    email"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'coder@example.com'")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" callback"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h4",{attrs:{id:"options-remove"}},[a("a",{attrs:{id:"optionsuser"}},[t._v("options.remove")])]),t._v(" "),a("ul",[a("li",[t._v("type: "),a("code",[t._v("string")])]),t._v(" "),a("li",[t._v("default: "),a("code",[t._v("'.'")])])]),t._v(" "),a("p",[t._v("Removes files that match the given pattern (Ignored if used together with\n"),a("code",[t._v("--add")]),t._v("). By default, "),a("code",[t._v("gh-pages")]),t._v(" removes everything inside the target branch\nauto-generated directory before copying the new files from "),a("code",[t._v("dir")]),t._v(".")]),t._v(" "),a("p",[t._v("Example use of the "),a("code",[t._v("remove")]),t._v(" option:")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("ghpages"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("publish")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'dist'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  remove"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"*.json"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" callback"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h4",{attrs:{id:"options-push"}},[a("a",{attrs:{id:"optionspush"}},[t._v("options.push")])]),t._v(" "),a("ul",[a("li",[t._v("type: "),a("code",[t._v("boolean")])]),t._v(" "),a("li",[t._v("default: "),a("code",[t._v("true")])])]),t._v(" "),a("p",[t._v("Push branch to remote.  To commit only (with no push) set to "),a("code",[t._v("false")]),t._v(".")]),t._v(" "),a("p",[t._v("Example use of the "),a("code",[t._v("push")]),t._v(" option:")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("ghpages"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("publish")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'dist'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("push"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" callback"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h4",{attrs:{id:"options-history"}},[a("a",{attrs:{id:"optionshistory"}},[t._v("options.history")])]),t._v(" "),a("ul",[a("li",[t._v("type: "),a("code",[t._v("boolean")])]),t._v(" "),a("li",[t._v("default: "),a("code",[t._v("true")])])]),t._v(" "),a("p",[t._v("Push force new commit without parent history.")]),t._v(" "),a("p",[t._v("Example use of the "),a("code",[t._v("history")]),t._v(" option:")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("ghpages"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("publish")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'dist'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("history"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" callback"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h4",{attrs:{id:"options-silent"}},[a("a",{attrs:{id:"optionssilent"}},[t._v("options.silent")])]),t._v(" "),a("ul",[a("li",[t._v("type: "),a("code",[t._v("boolean")])]),t._v(" "),a("li",[t._v("default: "),a("code",[t._v("false")])])]),t._v(" "),a("p",[t._v("Avoid showing repository URLs or other information in errors.")]),t._v(" "),a("p",[t._v("Example use of the "),a("code",[t._v("silent")]),t._v(" option:")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n * This configuration will avoid logging the GH_TOKEN if there is an error.\n */")]),t._v("\nghpages"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("publish")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'dist'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  repo"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'https://'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" process"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("env"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("GH_TOKEN")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'@github.com/user/private-repo.git'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  silent"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" callback"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h4",{attrs:{id:"options-beforeadd"}},[a("a",{attrs:{id:"optionsbeforeadd"}},[t._v("options.beforeAdd")])]),t._v(" "),a("ul",[a("li",[t._v("type: "),a("code",[t._v("function")])]),t._v(" "),a("li",[t._v("default: "),a("code",[t._v("null")])])]),t._v(" "),a("p",[t._v("Custom callback that is executed right before "),a("code",[t._v("git add")]),t._v(".")]),t._v(" "),a("p",[t._v("The CLI expects a file exporting the beforeAdd function")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("gh-pages --before-add ./cleanup.js\n")])])]),a("p",[t._v("Example use of the "),a("code",[t._v("beforeAdd")]),t._v(" option:")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n * beforeAdd makes most sense when `add` option is active\n * Assuming we want to keep everything on the gh-pages branch\n * but remove just `some-outdated-file.txt`\n */")]),t._v("\nghpages"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("publish")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'dist'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  add"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("beforeAdd")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("git")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" git"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("rm")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./some-outdated-file.txt'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" callback"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h4",{attrs:{id:"options-git"}},[a("a",{attrs:{id:"optionsgit"}},[t._v("options.git")])]),t._v(" "),a("ul",[a("li",[t._v("type: "),a("code",[t._v("string")])]),t._v(" "),a("li",[t._v("default: "),a("code",[t._v("'git'")])])]),t._v(" "),a("p",[t._v("Your "),a("code",[t._v("git")]),t._v(" executable.")]),t._v(" "),a("p",[t._v("Example use of the "),a("code",[t._v("git")]),t._v(" option:")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n * If `git` is not on your path, provide the path as shown below.\n */")]),t._v("\nghpages"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("publish")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'dist'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  git"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/path/to/git'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" callback"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h2",{attrs:{id:"command-line-utility"}},[t._v("Command Line Utility")]),t._v(" "),a("p",[t._v("Installing the package creates a "),a("code",[t._v("gh-pages")]),t._v(" command line utility.  Run "),a("code",[t._v("gh-pages --help")]),t._v(" to see a list of supported options.")]),t._v(" "),a("p",[t._v("With a local install of "),a("code",[t._v("gh-pages")]),t._v(", you can set up a package script with something like the following:")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"scripts"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"deploy"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"gh-pages -d dist"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("And then to publish everything from your "),a("code",[t._v("dist")]),t._v(" folder to your "),a("code",[t._v("gh-pages")]),t._v(" branch, you'd run this:")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" run deploy\n")])])]),a("h2",{attrs:{id:"debugging"}},[t._v("Debugging")]),t._v(" "),a("p",[t._v("To get additional output from the "),a("code",[t._v("gh-pages")]),t._v(" script, set "),a("code",[t._v("NODE_DEBUG=gh-pages")]),t._v(".  For example:")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("NODE_DEBUG")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("gh-pages "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" run deploy\n")])])]),a("h2",{attrs:{id:"dependencies"}},[t._v("Dependencies")]),t._v(" "),a("p",[t._v("Note that this plugin requires Git 1.9 or higher (because it uses the "),a("code",[t._v("--exit-code")]),t._v(" option for "),a("code",[t._v("git ls-remote")]),t._v(").  If you'd like to see this working with earlier versions of Git, please "),a("a",{attrs:{href:"https://github.com/tschaub/gh-pages/issues",target:"_blank",rel:"noopener noreferrer"}},[t._v("open an issue"),a("OutboundLink")],1),t._v(".")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://github.com/tschaub/gh-pages/workflows/Test/badge.svg",alt:"Test Status"}})]),t._v(" "),a("h2",{attrs:{id:"tips"}},[t._v("Tips")]),t._v(" "),a("h3",{attrs:{id:"when-get-error-branch-already-exists"}},[t._v("when get error "),a("code",[t._v("branch already exists")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("{ ProcessError: fatal: A branch named 'gh-pages' already exists.\n\n    at ChildProcess.<anonymous> (~/node_modules/gh-pages/lib/git.js:42:16)\n    at ChildProcess.emit (events.js:180:13)\n    at maybeClose (internal/child_process.js:936:16)\n    at Process.ChildProcess._handle.onexit (internal/child_process.js:220:5)\n  code: 128,\n  message: 'fatal: A branch named \\'gh-pages\\' already exists.\\n',\n  name: 'ProcessError' }\n")])])]),a("p",[t._v("The "),a("code",[t._v("gh-pages")]),t._v(" module writes temporary files to a "),a("code",[t._v("node_modules/.cache/gh-pages")]),t._v(" directory.  The location of this directory can be customized by setting the "),a("code",[t._v("CACHE_DIR")]),t._v(" environemnt variable.")]),t._v(" "),a("p",[t._v("If "),a("code",[t._v("gh-pages")]),t._v(" fails, you may find that you need to manually clean up the cache directory.  To remove the cache directory, run "),a("code",[t._v("node_modules/gh-pages/bin/gh-pages-clean")]),t._v(" or remove "),a("code",[t._v("node_modules/.cache/gh-pages")]),t._v(".")])])}),[],!1,null,null,null);s.default=n.exports}}]);